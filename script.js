let order = [];
let clickedOrder = [];
let score = 0;
let isShuffling = false;

// 0 - verde
// 1 - vermelho
// 2 - amarelo
// 3 - azul

const blue = document.querySelector('.blue');
const red = document.querySelector('.red');
const green = document.querySelector('.green');
const yellow = document.querySelector('.yellow');

let shuffleOrder = () => {
    let colorOrder = Math.floor(Math.random() * 4);
    order[order.length] = colorOrder;
    clickedOrder = [];

    console.log('shuffling');
    isShuffling = true;
    for (let i in order) {
        let elementColor = createColorElement(order[i]);
        lightColor(elementColor, Number(i) + 1);
    }
}

let lightColor = (element, number) => {

    setTimeout(() => {
        element.classList.add('selected');
    }, number * 600 - 50);

    setTimeout(() => {
        element.classList.remove('selected');

        if (number === order.length) {
            isShuffling = false;
            console.log('stopped shuffling');
        }
    }, number * 600 + 300);
}

//check if the clicked buttons are the same as 
//the order generated by the game
let checkOrder = () => {
    for (let i in clickedOrder) {
        if (clickedOrder[i] != order[i]) {
            gameOver();
            break;
        }
    }

    if (clickedOrder.length == order.length) {
        // alert(`Pontuação: ${score}\nVocê acertou! Iniciando próximo nível!`);
        shuffleOrder();
    }
}

//function for the user click
let click = (color) => {
    if (isShuffling) {
        console.log('shuffling so dont click');
        return;
    }
    console.log('clicked');

    clickedOrder[clickedOrder.length] = color;
    createColorElement(color).classList.add('selected');

    setTimeout(() => {
        createColorElement(color).classList.remove('selected');
        checkOrder();
    }, 250);
}

//function that returns the color
let createColorElement = (color) => {
    switch (color) {
        case 0: 
            return green;
        case 1:
            return red;
        case 2:
            return yellow;
        case 3:
            return blue;
    }
}

//function to the next level of the game
let nextLevel = () => {
    score++;
    shuffleOrder();
}

//function to game over
let gameOver = () => {
    alert(`Pontuação: ${score}!\nVocê perdeu o jogo!`);
    order = [];
    clickedOrder = [];

    playGame();
}

let playGame = () => {
    alert('Bem vindo ao Genius!');
    score = 0;

    nextLevel();
}

green.addEventListener('click', ()=> click(0));
red.addEventListener('click', ()=> click(1));
yellow.addEventListener('click', ()=> click(2));
blue.addEventListener('click', ()=> click(3));

playGame();